

package POOJava;  
//ğŸ”¹ 'package' = palabra reservada, organiza las clases dentro de un paquete llamado POOJava.

//Encapsulamiento : Controlar los accesos a los atributos y metodos de una clase con private y getters/setters.

//Definimos una clase llamada Cuenta 

public class Cuenta {  
//ğŸ”¹ 'public' = modificador de acceso, visible desde cualquier parte.
//ğŸ”¹ 'class' = palabra reservada, define una clase llamada Cuenta.
	
	private double saldo; 
	// ğŸ”¹ 'private' = acceso restringido, solo la misma clase puede usarlo.
	// ğŸ”¹ 'double' = tipo de dato para nÃºmeros decimales.
	// 'saldo' = atributo que guarda el dinero en la cuenta.
	
	public void depositar(double monto) { 
	// ğŸ”¹ 'public' = accesible desde cualquier parte.
	// ğŸ”¹ 'void' = mÃ©todo que no retorna nada.
	// 'depositar' = nombre del mÃ©todo.
	// ParÃ¡metro: 'double monto' â†’ la cantidad de dinero a ingresar.
		
		saldo += monto;  
		// suma el monto al saldo actual.
	}
	
	// Getter: nos permite consultar el saldo de manera segura
	public double getSaldo() {  
	// ğŸ”¹ 'double' = tipo de dato de retorno (nÃºmero decimal).
	// 'getSaldo' = nombre del mÃ©todo que devuelve el saldo.
		return saldo;  
		// ğŸ”¹ 'return' = devuelve el valor de saldo.
	}

	public static void main(String[] args) {
	// ğŸ”¹ 'public' = accesible desde cualquier parte.
	// ğŸ”¹ 'static' = pertenece a la clase, no necesita crear objeto para llamarlo.
	// ğŸ”¹ 'void' = no retorna nada.
	// 'main' = punto de entrada del programa.
	// 'String[] args' = argumentos que se pueden pasar desde consola.
		
		Cuenta miCuenta = new Cuenta();   
		// ğŸ”¹ 'new' = crea un objeto en memoria.
		// 'miCuenta' = objeto de tipo Cuenta.
		
		miCuenta.depositar(10000);   
		// Llamamos al mÃ©todo depositar, agregando 5000 al saldo.
		
		System.out.println("Saldo actual: " + miCuenta.getSaldo()); 
		// Muestra el saldo actual usando el getter.
	}
}
